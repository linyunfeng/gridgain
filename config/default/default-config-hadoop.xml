<?xml version="1.0" encoding="UTF-8"?>

<!--
    _________        _____ __________________        _____
    __  ____/___________(_)______  /__  ____/______ ____(_)_______
    _  / __  __  ___/__  / _  __  / _  / __  _  __ `/__  / __  __ \
    / /_/ /  _  /    _  /  / /_/ /  / /_/ /  / /_/ / _  /  _  / / /
    \____/   /_/     /_/   \_,__/   \____/   \__,_/  /_/   /_/ /_/

    
 Copyright (C) GridGain Systems. All Rights Reserved.
 
 Licensed under the Apache License, Version 2.0 (the "License");
 you may not use this file except in compliance with the License.
 You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0
 
 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.

    Version: @xml.file.version
-->

<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
                           http://www.springframework.org/schema/beans/spring-beans-2.5.xsd">
    <description>Main Spring file for grid configuration.</description>

    <bean id="grid.cfg" class="org.gridgain.grid.GridConfiguration" scope="singleton">
        <!--
            Specify list of GGFS configurations here.
        -->
        <property name="ggfsConfiguration">
            <list>
                <bean class="org.gridgain.grid.ggfs.GridGgfsConfiguration">
                    <property name="name" value="ggfs"/>

                    <property name="metaCacheName" value="ggfs-meta"/>

                    <property name="dataCacheName" value="ggfs-data"/>

                    <!-- Must correlate with cache affinity mapper. -->
                    <property name="blockSize" value="#{128 * 1024}"/>
                    <property name="perNodeBatchSize" value="512"/>
                    <property name="perNodeParallelBatchCount" value="16"/>

                    <!-- Set number of prefetch blocks. -->
                    <property name="prefetchBlocks" value="32"/>

                    <!--
                        This will disable IPC endpoint binding thus preventing Hadoop clients from connecting to GGFS.
                        With this option set to false the only possible way to interact with GGFS is through
                        GridGain API.
                    -->
                    <property name="ipcEndpointEnabled" value="false" />
                </bean>
            </list>
        </property>

        <!--
            Specify list of cache configurations here. The following caches are configured:

            - GGFS data cache (PARTITIONED)
            - GGFS meta cache (REPLICATED)

            Any property from GridCacheConfiguration interface can be configured here.
            Note that absolutely all configuration properties are optional.
        -->
        <property name="cacheConfiguration">
            <list>
                <!--
                    GGFS data cache.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <property name="name" value="ggfs-data"/>

                    <property name="cacheMode" value="PARTITIONED"/>

                    <!--
                        GGFS requires that data cache works in TRANSACTIONAL mode.
                     -->
                    <property name="atomicityMode" value="TRANSACTIONAL"/>

                    <!--
                        GGFS requires that data cache works in FULL_SYNC synchronization mode.
                    -->
                    <property name="writeSynchronizationMode" value="FULL_SYNC"/>

                    <!--
                        Disable near cache as it's not needed for GGFS.
                    -->
                    <property name="distributionMode" value="PARTITIONED_ONLY"/>

                    <!--
                        Initial cache size. Should be about 150% of the number
                        of entries you are planning to have to avoid resizing.
                        Change accordingly to your application requirements.
                    -->
                    <property name="startSize" value="1500000"/>

                    <!--
                        For better performance set this property to false in case
                        cache queries are not used.
                        Default value is true.
                    -->
                    <property name="queryIndexEnabled" value="false"/>

                    <!--
                        This shows how to configure number of backups. The best performance
                        is achieved with 0 backup copies.
                    -->
                    <property name="backups" value="0"/>

                    <!--
                        This shows how to configure number of blocks in row will be stored on the same node.
                    -->
                    <property name="affinityMapper">
                        <bean class="org.gridgain.grid.ggfs.GridGgfsGroupDataBlocksKeyMapper">
                            <constructor-arg value="512"/>
                        </bean>
                    </property>
                </bean>

                <!--
                    GGFS meta cache.
                -->
                <bean class="org.gridgain.grid.cache.GridCacheConfiguration">
                    <property name="name" value="ggfs-meta"/>

                    <property name="cacheMode" value="REPLICATED"/>

                    <!--
                        GGFS requires that meta cache works in TRANSACTIONAL mode.
                     -->
                    <property name="atomicityMode" value="TRANSACTIONAL"/>

                    <!--
                        GGFS requires that meta cache works in FULL_SYNC synchronization mode.
                    -->
                    <property name="writeSynchronizationMode" value="FULL_SYNC"/>

                    <!--
                        Initial cache size. Should be about 150% of the number
                        of entries you are planning to have to avoid resizing.
                        Change accordingly to your application requirements.
                    -->
                    <property name="startSize" value="1500000"/>

                    <!--
                        For better performance set this property to false in case
                        cache queries are not used.
                        Default value is true.
                    -->
                    <property name="queryIndexEnabled" value="false"/>
                </bean>
            </list>
        </property>

        <!--
            Uncomment this to provide TCP discovery SPI (Amazon EC2).
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.s3.GridTcpDiscoveryS3IpFinder">
                        <property name="awsCredentials">
                            <bean class="com.amazonaws.auth.BasicAWSCredentials">
                                <constructor-arg value="YOUR_ACCESS_KEY_ID" />
                                <constructor-arg value="YOUR_SECRET_ACCESS_KEY" />
                            </bean>
                        </property>
                        <property name="bucketName" value="YOUR_BUCKET_NAME_IP_FINDER"/>
                    </bean>
                </property>
                <property name="heartbeatFrequency" value="2000"/>
            </bean>
        </property>
        -->

        <!--
            Uncomment this to provide TCP discovery SPI (Local network).

            If path to shared file system is not explicitly provided,
            then only local nodes will be able to discover each other.
        -->
        <!--
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.sharedfs.GridTcpDiscoverySharedFsIpFinder">
                        <property name="path" value="work/disco/tcp"/>
                    </bean>
                </property>
            </bean>
        </property>
        -->

        <!--
            TCP discovery SPI configuration with multicast-based IP finder.
            Use the addresses list to provide IP addresses of initial nodes in the grid
            (at least one address must be provided).

            Note:
            =====
            If running in distributed environment, you should change IP addresses to the actual IP addresses
            of the servers on your network. Not all addresses need to be specified, only the addresses
            of one or more servers which will always be started first.
        -->
        <property name="discoverySpi">
            <bean class="org.gridgain.grid.spi.discovery.tcp.GridTcpDiscoverySpi">
                <property name="ipFinder">
                    <bean class="org.gridgain.grid.spi.discovery.tcp.ipfinder.multicast.GridTcpDiscoveryMulticastIpFinder">
                        <!--
                            In addition to addresses received via multicast this finder can work with pre-configured
                            list of addresses (e.g., you can use it if multicast is disabled in your network).

                            If running in distributed environment, you should change IP addresses to the actual IP
                            addresses of the servers on your network. Not all addresses need to be specified, only
                            the addresses of one or more servers which will always be started first.
                        -->
                        <!--
                        <property name="addresses">
                            <list>
                                <value>host1:port1</value>
                                <value>host2:port2</value>
                            </list>
                        </property>
                        -->
                    </bean>
                </property>
            </bean>
        </property>
    </bean>
</beans>
